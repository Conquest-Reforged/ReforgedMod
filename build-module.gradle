apply plugin: "fabric-loom"
apply plugin: "eclipse"

//version = "mc${minecraft_version}-${mod_version}"
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = "17"

configurations {
    compileProject
    compile.extendsFrom compileProject
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    //mappings loom.officialMojangMappings()
    mappings "net.fabricmc:yarn:${project.yarn_mappings}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    implementation 'org.jetbrains:annotations:20.1.0'
    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

// copies the module's classes to the test folder
task prepareRunClasses(type: Copy) {
    from("$buildDir/classes/java/main")
    into("$buildDir/classes/java/test")
}

// copies the module's resources to the test folder
task prepareRunResources(type: Copy) {
    from("$buildDir/resources/main")
    into("$buildDir/resources/test")
}

// copies the module's dependency classes to the test folder
task prepareRunDeps(type: Copy) {
    from { configurations.compileProject.collect { it.isDirectory() ? it : zipTree(it) } }
    into("build/classes/java/test")
}

// collects the test classes/resources for the run config
testClasses {
    dependsOn(prepareRunDeps, prepareRunClasses, prepareRunResources)
}

